TE:MP_FOLDER = "/tmp/pathogen_download"
VIM_BUNDLE =  VIM_BASEDIR + "/bundle"

task :install_pathogen do
  system("git clone https://github.com/tpope/vim-pathogen.git " + TEMP_FOLDER)

  if not directory_exists?(VIM_BASEDIR)
    system("mkdir " + VIM_BASEDIR);
  end

  if not directory_exists?(VIM_AUTOLOAD)
    system("mkdir " + VIM_AUTOLOAD);
  end

  system("cp " + TEMP_FOLDER + "/autoload/* "+ VIM_AUTOLOAD);
  system("rm -fr " + TEMP_FOLDER);
end

task :default do
  plugins.each_pair { |key, value| clone key, value}
end

task :update, [:name] do |t, args|
  update(args.name)
end

task :delete, [:name] do |t, args|
  delete_plugin(args.name)
end

task :list do
  puts "Plugins installed in " + VIM_BUNDLE
  installed_plugins.select { |x| x != "." and x != ".." }.each { |plugin| puts plugin }
end

def plugins
 {
    #theme
    "solarized"     => "https://github.com/altercation/vim-colors-solarized.git",

    #languages
    "vim-markdown"  => "http://github.com/plasticboy/vim-markdown",

    #productivity
    "airline"       => "https://github.com/bling/vim-airline"
 }
end

def directory_exists?(directory)
  File.directory?(directory)
end

def clone(name, url)
  if File.exists?(VIM_BUNDLE + "/#{name}")
  puts "[Exists] #{name}"
  else
  puts "[Installing] #{name}"
  system("git clone #{url} " + VIM_BUNDLE + "/#{name}")
  puts "[Installed] #{name}"
  end
end

def update(name)
  if plugin_installed?(name) && plugin_in_plugins?(name)
    delete_plugin(name)
    clone(name, plugins.values_at(name)[0])
  end
end

def installed_plugins
  Dir.foreach(VIM_BUNDLE)
end

def plugin_installed?(name)
  if installed_plugins.include? name
    return true
  else
    puts "Plugin not found in bundle direcotry"
    return false
  end
end

def plugin_in_plugins?(name)
  if plugins.include? name
    return true
  else
    puts "Plugin not in hash of plugins"
    return false
  end
end

def delete_plugin(name)
  if plugin_installed?(name)
    puts "[Removing] #{name}"
    FileUtils.rm_rf(VIM_BUNDLE + "/#{name}")
    puts "[Removed] #{name}"
  end
end
